#######################################
#         YAML Templates              #
#######################################
variables:
  - &run-build
    # runs a build operations. The task name in evergreen should
    # correspond to a make target for the build operation.
    name: test
    commands:
      - command: git.get_project
        type: system
        params:
          directory: gopath/src/github.com/mongodb/grip
      - func: run-make
        vars: { target: "${task_name}" }


#######################################
#              Functions              #
#######################################
functions:
  run-make:
    command: subprocess.exec
    type: test
    params:
      working_dir: gopath/src/github.com/mongodb/grip
      binary: make
      args: ["${make_args}", "${target}"]
      include_expansions_in_env: ["DISABLE_COVERAGE", "GO_BIN_PATH", "GOROOT"]
      env:
        GOPATH: ${workdir}/gopath

#######################################
#                Tasks                #
#######################################
post:
  - command: gotest.parse_files
    type: setup
    params:
      files:
        - "gopath/src/github.com/mongodb/grip/build/output.*"
  - command: s3.put
    type: system
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      local_files_include_filter: ["gopath/src/github.com/mongodb/grip/build/output.*.coverage.html"]
      remote_file: evergreen/${task_id}/
      bucket: mciuploads
      content_type: text/html
      permissions: public-read
      display_name: "(html) coverage:"
  - command: s3.put
    type: system
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      local_files_include_filter: ["gopath/src/github.com/mongodb/grip/build/output.*.coverage"]
      remote_file: evergreen/${task_id}/
      bucket: mciuploads
      content_type: text/plain
      permissions: public-read
      display_name: "(txt) coverage:"

tasks:
  # the build (with and without the race detector) and lint tasks use
  # a template that does not include test result parsing.
  - name: lint
    tags: ["report"]
    commands:
      - command: git.get_project
        type: system
        params:
          directory: gopath/src/github.com/mongodb/grip
      - func: run-make
        vars: { target: "lint" }

  - name: coverage
    tags: [ "report" ]
    commands:
      - command: git.get_project
        type: system
        params:
          directory: gopath/src/github.com/mongodb/grip
      - func: run-make
        vars:
          target: "coverage-html"
          make_args: "-k"

  - <<: *run-build
    tags: ["test"]
    name: test

  - <<: *run-build
    tags: ["race"]
    name: race

  - <<: *run-build
    tags: ["test"]
    name: benchmark-send

#######################################
#           Buildvariants             #
#######################################
buildvariants:
  - name: race-detector
    display_name: Race Detector (Arch Linux)
    expansions:
      DISABLE_COVERAGE: true
      GO_BIN_PATH: /opt/golang/go1.16/bin/go
      GOROOT: /opt/golang/go1.16
    run_on:
      - archlinux-new-small
      - archlinux-new-large
    tasks: [ ".race", ".report" ]

  - name: ubuntu
    display_name: Ubuntu 18.04
    expansions:
      DISABLE_COVERAGE: true
      GO_BIN_PATH: /opt/golang/go1.16/bin/go
      GOROOT: /opt/golang/go1.16
    run_on:
      - ubuntu1804-small
      - ubuntu1804-large
    tasks: [ ".test" ]

  - name: macos
    display_name: macOS
    expansions:
      DISABLE_COVERAGE: true
      GO_BIN_PATH: /opt/golang/go1.16/bin/go
      GOROOT: /opt/golang/go1.16
    run_on:
      - macos-1014
    tasks: [ ".test" ]

  - name: windows
    display_name: Windows
    run_on:
      - windows-64-vs2019-small
      - windows-64-vs2019-large
      - windows-64-vs2017-small
      - windows-64-vs2017-large
    expansions:
      DISABLE_COVERAGE: true
      GO_BIN_PATH: /cygdrive/c/golang/go1.16/bin/go
      GOROOT: C:/golang/go1.16
    tasks: [ ".test" ]
